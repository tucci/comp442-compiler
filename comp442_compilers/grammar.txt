prog            -> classDeclList progBody 
progBody        -> program funcBody ; funcDefList 
classDeclList   -> classDecl classDeclList 
classDeclList   -> EPSILON 
classDecl       -> class id { varFuncDefList } ; 
varFuncDefList -> type id varFuncDefListRest varFuncDefList
varFuncDefList -> EPSILON
varFuncDefListRest -> varDeclRest
varFuncDefListRest -> funcDefRest
funcDef         -> type id funcDefRest
funcDefRest     -> ( fParams ) funcBody ;
funcDefList     -> funcDef funcDefList 
funcDefList     -> EPSILON 

funcBody        -> { varStatementList } 
varStatementList -> id varStatementListRest varStatementList
varStatementList -> varDeclNoId varStatementList
varStatementList -> noIdStartStatement varStatementList
varStatementList -> EPSILON

varStatementListRest -> id varDeclRest 
varStatementListRest -> assignStatRest ;


varDecl         -> type id varDeclRest
varDeclNoId     -> typeNoId id varDeclRest
varDeclRest     -> arraySizeList ; 
varDeclList     -> varDecl varDeclList 
varDeclList     -> EPSILON 

noIdStartStatement       -> for ( type id assignOp expr ; relExpr ; assignStat ) statBlock ; 
noIdStartStatement       -> if ( expr ) then statBlock elseBlock ; 
noIdStartStatement       -> get ( variable ) ; 
noIdStartStatement       -> put ( expr ) ; 
noIdStartStatement       -> return ( expr ) ;
elseBlock -> else statBlock
elseBlock -> EPSILON
statement -> noIdStartStatement
statement       -> assignStat ; 
statementList   -> statement statementList 
statementList   -> EPSILON 
assignStat      -> variable assignStatRest
assignStatRest -> assignOp expr 
statBlock       -> { statementList } 
statBlock       -> statement 
statBlock       -> EPSILON 
expr            -> arithExpr 
expr            -> relExpr 
relExpr         -> arithExpr relOp arithExpr 
arithExpr       -> term 
arithExpr       -> arithExpr addOp term 
sign            -> + 
sign            -> - 
term            -> factor 
term            -> term multOp factor 
factor          -> idnestList id ( aParams ) 
factor          -> ( arithExpr ) 
factor          -> num 
factor          -> not factor 
factor          -> variable 
factor          -> sign factor 
variable        -> idnestList id indiceList 
idnest          -> id indiceList . 
idnestList      -> idnest idnestList 
idnestList      -> EPSILON 
indice          -> [ arithExpr ] 
indiceList      -> indice indiceList 
indiceList      -> EPSILON 
arraySize       -> [ integer ] 
arraySizeList   -> arraySize arraySizeList 
arraySizeList   -> EPSILON 
typeNoId -> float
typeNoId -> int
type            -> typeNoId 
type            -> id
fParams         -> type id arraySizeList fParamsTailList 
fParams         -> EPSILON 
aParams         -> expr aParamsTailList 
aParams         -> EPSILON 
fParamsTail     -> , type id arraySizeList 
fParamsTailList -> fParamsTail fParamsTailList 
fParamsTailList -> EPSILON 
aParamsTail     -> , expr 
aParamsTailList -> aParamsTail aParamsTailList 
aParamsTailList -> EPSILON 
assignOp          	 -> = 
relOp             	 -> < relOpLessThanRest
relOpLessThanRest 	 -> = | > | EPSILON
relOp           	 -> = = 
relOp           	 -> > relOpGreaterThanRest
relOpGreaterThanRest -> = | EPSILON
addOp           -> + 
addOp           -> - 
addOp           -> or 
multOp          -> * 
multOp          -> / 
multOp          -> and 

